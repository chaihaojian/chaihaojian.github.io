<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>计算机组成原理 on EachannJ&#39;s blog</title>
        <link>https://chaihaojian.github.io/categories/computer_composition_principles/</link>
        <description>Recent content in 计算机组成原理 on EachannJ&#39;s blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Thu, 18 Jul 2024 10:08:09 +0800</lastBuildDate><atom:link href="https://chaihaojian.github.io/categories/computer_composition_principles/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>数据的表示和运算</title>
        <link>https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/</link>
        <pubDate>Thu, 18 Jul 2024 10:08:09 +0800</pubDate>
        
        <guid>https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/</guid>
        <description>&lt;img src="https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/cover.JPG" alt="Featured image of post 数据的表示和运算" /&gt;&lt;h1 id=&#34;数据的表示和运算&#34;&gt;数据的表示和运算&lt;/h1&gt;
&lt;h2 id=&#34;数制与编码&#34;&gt;数制与编码&lt;/h2&gt;
&lt;h3 id=&#34;进位计数制&#34;&gt;进位计数制&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_7.png&#34;
	width=&#34;934&#34;
	height=&#34;413&#34;
	srcset=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_7_huea7057a76ca43e0249f49d34bc0ef5dc_147560_480x0_resize_box_3.png 480w, https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_7_huea7057a76ca43e0249f49d34bc0ef5dc_147560_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Image 7&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;226&#34;
		data-flex-basis=&#34;542px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;r进制计数法&#34;&gt;r进制计数法&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_.png&#34;
	width=&#34;599&#34;
	height=&#34;187&#34;
	srcset=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2__hu6ee04ddba7e498bef13726d1be6b5b16_55910_480x0_resize_box_3.png 480w, https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2__hu6ee04ddba7e498bef13726d1be6b5b16_55910_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Image 0&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;320&#34;
		data-flex-basis=&#34;768px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;二进制----八进制&#34;&gt;二进制 &amp;lt;&amp;ndash;&amp;gt; 八进制&lt;/h4&gt;
&lt;p&gt;二进制中的三位数正好可以表示八进制中的一位数&lt;/p&gt;
&lt;p&gt;3位一组，每组转换成对应的8进制符号；首尾如果不足3位，则用0补全&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_1.png&#34;
	width=&#34;599&#34;
	height=&#34;73&#34;
	srcset=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_1_hufd7e2be4af988ac4ced16cf2dd85ba8b_13108_480x0_resize_box_3.png 480w, https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_1_hufd7e2be4af988ac4ced16cf2dd85ba8b_13108_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Image 1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;820&#34;
		data-flex-basis=&#34;1969px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;同理，八进制中的一位数对应二进制中的3位数&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_3.png&#34;
	width=&#34;365&#34;
	height=&#34;73&#34;
	srcset=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_3_hu259b1614c78f159a6adfd3fdcab8d1ac_6494_480x0_resize_box_3.png 480w, https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_3_hu259b1614c78f159a6adfd3fdcab8d1ac_6494_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Image 3&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;500&#34;
		data-flex-basis=&#34;1200px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;二进制----十六进制&#34;&gt;二进制 &amp;lt;&amp;ndash;&amp;gt; 十六进制&lt;/h4&gt;
&lt;p&gt;二进制中的四位数正好可以表示十六进制中的一位数&lt;/p&gt;
&lt;p&gt;4位一组，每组转换成对应的十六进制符号，首尾如果不足3位，则用0补全&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_2.png&#34;
	width=&#34;599&#34;
	height=&#34;73&#34;
	srcset=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_2_hu36f0f2e0a4c55ce1004ca9b38dab3973_12122_480x0_resize_box_3.png 480w, https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_2_hu36f0f2e0a4c55ce1004ca9b38dab3973_12122_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Image 2&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;820&#34;
		data-flex-basis=&#34;1969px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;同理，十六进制中的一位数对应二进制中的4位数&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_4.png&#34;
	width=&#34;365&#34;
	height=&#34;62&#34;
	srcset=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_4_hu77da6551f2879d8c49c72e0dd435d10a_8016_480x0_resize_box_3.png 480w, https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_4_hu77da6551f2879d8c49c72e0dd435d10a_8016_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Image 4&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;588&#34;
		data-flex-basis=&#34;1412px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;十进制----任意进制&#34;&gt;十进制 &amp;ndash;&amp;gt; 任意进制&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_5.png&#34;
	width=&#34;1005&#34;
	height=&#34;257&#34;
	srcset=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_5_hu28668f8e553d4a4682d92dec18010aa6_72207_480x0_resize_box_3.png 480w, https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_5_hu28668f8e553d4a4682d92dec18010aa6_72207_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Image 5&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;391&#34;
		data-flex-basis=&#34;938px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_6.png&#34;
	width=&#34;901&#34;
	height=&#34;342&#34;
	srcset=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_6_hud8627d2f25b1a17659d8525555930826_101301_480x0_resize_box_3.png 480w, https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_6_hud8627d2f25b1a17659d8525555930826_101301_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Image 6&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;263&#34;
		data-flex-basis=&#34;632px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;上述小数部分的0.3在转换成二进制时会无限循环下去，表明十进制中的0.3无法在二进制中精确表示&lt;/p&gt;
&lt;h4 id=&#34;真值和机器数&#34;&gt;真值和机器数&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;真值&lt;/strong&gt;：符合人类习惯的数字，如：2，5，-3，-11&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;机器数&lt;/strong&gt;：数字实际存储到机器里的形式，正负号需要被数字化，在数字开头加 ‘0‘ 或 ’1’ 来表示正负&lt;/p&gt;
&lt;h3 id=&#34;bcd码&#34;&gt;BCD码&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;BCD&lt;/strong&gt;：Binary-Coded Decimal，用二进制编码的十进制&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_12.png&#34;
	width=&#34;889&#34;
	height=&#34;339&#34;
	srcset=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_12_hue6085323e6b4a64862afb0414f102c5c_102616_480x0_resize_box_3.png 480w, https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_12_hue6085323e6b4a64862afb0414f102c5c_102616_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Image 12&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;262&#34;
		data-flex-basis=&#34;629px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;8421码&#34;&gt;8421码&lt;/h4&gt;
&lt;p&gt;考虑用四个二进制位表示十进制中的0～9&lt;/p&gt;
&lt;p&gt;四个二进制位一共能表示16种状态，十进制0～9表示10种状态，因此这种表示会产生6种冗余状态，需要舍弃&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_8.png&#34;
	width=&#34;781&#34;
	height=&#34;123&#34;
	srcset=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_8_hud46e6c46b15f7b9b9c927d5c176fc607_41573_480x0_resize_box_3.png 480w, https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_8_hud46e6c46b15f7b9b9c927d5c176fc607_41573_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Image 8&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;634&#34;
		data-flex-basis=&#34;1523px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_9.png&#34;
	width=&#34;781&#34;
	height=&#34;131&#34;
	srcset=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_9_hubde0e465ac53a477f0d449e19a425af6_47730_480x0_resize_box_3.png 480w, https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_9_hubde0e465ac53a477f0d449e19a425af6_47730_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Image 9&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;596&#34;
		data-flex-basis=&#34;1430px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;上述计算结果 13 (1101) 恰好处在8421码需要舍弃的6种状态中，因此通过加 6 (0110) 来剔除这六种冗余，从而得到十进制数13的正确8421码表示&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;由于四个二进制码可以表示16种不同的状态，因此在表示十进制中的0～9时，可以产生不同的映射方案&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;余3码8421码--0011sub2sub&#34;&gt;余3码：8421码 + (0011)&lt;!-- raw HTML omitted --&gt;2&lt;!-- raw HTML omitted --&gt;&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_10.png&#34;
	width=&#34;781&#34;
	height=&#34;79&#34;
	srcset=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_10_hu155fcf5eff2b00145e43c16130068e20_32567_480x0_resize_box_3.png 480w, https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_10_hu155fcf5eff2b00145e43c16130068e20_32567_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Image 10&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;988&#34;
		data-flex-basis=&#34;2372px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;特点&lt;/strong&gt;：8421码中，四个二进制位都有其固定的权值，分别为 8 - 4 - 2 - 1，但在余3码中，四个二进制位没有其固定的权值&lt;/p&gt;
&lt;h4 id=&#34;2421码将四个二进制位的权值变为-2---4---2---1&#34;&gt;2421码：将四个二进制位的权值变为 2 - 4 - 2 - 1&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_11.png&#34;
	width=&#34;781&#34;
	height=&#34;79&#34;
	srcset=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_11_hu5c214a11f190c529eb3ebc74c4538dd6_35301_480x0_resize_box_3.png 480w, https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_11_hu5c214a11f190c529eb3ebc74c4538dd6_35301_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Image 11&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;988&#34;
		data-flex-basis=&#34;2372px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;特点&lt;/strong&gt;：十进制中的4～9在2421码中会有多种编码方式，因此规定在表示5～9时，第一个二进制位即最高位必须是1&lt;/p&gt;
&lt;h3 id=&#34;无符号整数的表示和运算&#34;&gt;无符号整数的表示和运算&lt;/h3&gt;
&lt;h4 id=&#34;无符号整数的表示&#34;&gt;无符号整数的表示&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_13.png&#34;
	width=&#34;1012&#34;
	height=&#34;569&#34;
	srcset=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_13_huc7a3b5f21838d75d9ef9363e0e0c2bd7_259993_480x0_resize_box_3.png 480w, https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_13_huc7a3b5f21838d75d9ef9363e0e0c2bd7_259993_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Image 13&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;无符号整数的加法运算&#34;&gt;无符号整数的加法运算&lt;/h4&gt;
&lt;p&gt;从最低位开始，按位相加，并往更高位进位&lt;/p&gt;
&lt;h4 id=&#34;无符号整数的减法-运算&#34;&gt;无符号整数的减法 运算&lt;/h4&gt;
&lt;p&gt;被减数不变，减数全部按位取反、末位+1，减法变加法&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_14.png&#34;
	width=&#34;1009&#34;
	height=&#34;565&#34;
	srcset=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_14_hu7874eac9dbaf2192743805bac0b4e193_197798_480x0_resize_box_3.png 480w, https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_14_hu7874eac9dbaf2192743805bac0b4e193_197798_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Image 14&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;178&#34;
		data-flex-basis=&#34;428px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;带符号整数的表示和运算&#34;&gt;带符号整数的表示和运算&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_21.png&#34;
	width=&#34;1009&#34;
	height=&#34;479&#34;
	srcset=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_21_hu3e1b445f65435a07c23711ce8c41956b_219490_480x0_resize_box_3.png 480w, https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_21_hu3e1b445f65435a07c23711ce8c41956b_219490_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Image 21&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;210&#34;
		data-flex-basis=&#34;505px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;带符号整数的原码表示&#34;&gt;带符号整数的原码表示&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_15.png&#34;
	width=&#34;1009&#34;
	height=&#34;565&#34;
	srcset=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_15_hu82c73e8c5b5edbb921c7bb2c8fb27552_254147_480x0_resize_box_3.png 480w, https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_15_hu82c73e8c5b5edbb921c7bb2c8fb27552_254147_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Image 15&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;178&#34;
		data-flex-basis=&#34;428px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;带符号整数的运算&#34;&gt;带符号整数的运算&lt;/h4&gt;
&lt;p&gt;原码的缺点：由于符号位不能直接参与运算，无法通过两个数的原码直接相加得到正确结果，需要用复杂的电路才能处理&lt;/p&gt;
&lt;p&gt;使用补码可以解决上述问题&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_16.png&#34;
	width=&#34;1009&#34;
	height=&#34;565&#34;
	srcset=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_16_hu3cc48a145c6d4d90330587f0409ce286_119746_480x0_resize_box_3.png 480w, https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_16_hu3cc48a145c6d4d90330587f0409ce286_119746_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Image 16&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;178&#34;
		data-flex-basis=&#34;428px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_17.png&#34;
	width=&#34;1009&#34;
	height=&#34;565&#34;
	srcset=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_17_hu6cf7528a72fc34edcd242bd471957f85_213131_480x0_resize_box_3.png 480w, https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_17_hu6cf7528a72fc34edcd242bd471957f85_213131_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Image 17&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;178&#34;
		data-flex-basis=&#34;428px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;对于计算机，通过将补码的数值位取反，然后末位+1，得到原码（负数）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_18.png&#34;
	width=&#34;1009&#34;
	height=&#34;565&#34;
	srcset=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_18_huaf52b54d9df3f17b1786376a0de49291_169311_480x0_resize_box_3.png 480w, https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_18_huaf52b54d9df3f17b1786376a0de49291_169311_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Image 18&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;178&#34;
		data-flex-basis=&#34;428px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_19.png&#34;
	width=&#34;1009&#34;
	height=&#34;565&#34;
	srcset=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_19_hua1c99aea6c5ac286deb69f85056f420b_246086_480x0_resize_box_3.png 480w, https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_19_hua1c99aea6c5ac286deb69f85056f420b_246086_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Image 19&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;178&#34;
		data-flex-basis=&#34;428px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_20.png&#34;
	width=&#34;1009&#34;
	height=&#34;115&#34;
	srcset=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_20_hu24cc14be73c0a2b80db77dab4c84e374_80697_480x0_resize_box_3.png 480w, https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_20_hu24cc14be73c0a2b80db77dab4c84e374_80697_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Image 20&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;877&#34;
		data-flex-basis=&#34;2105px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;原码反码补码的特性&#34;&gt;原码/反码/补码的特性&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_22.png&#34;
	width=&#34;1009&#34;
	height=&#34;555&#34;
	srcset=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_22_huc9e1e99438540ef6435119ffcd1f4621_251284_480x0_resize_box_3.png 480w, https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_22_huc9e1e99438540ef6435119ffcd1f4621_251284_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Image 22&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;181&#34;
		data-flex-basis=&#34;436px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;带符号整数的移码表示&#34;&gt;带符号整数的移码表示&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_23.png&#34;
	width=&#34;1009&#34;
	height=&#34;555&#34;
	srcset=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_23_hu208fb65fdf259968eb008f42e58fdd37_179684_480x0_resize_box_3.png 480w, https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_23_hu208fb65fdf259968eb008f42e58fdd37_179684_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Image 23&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;181&#34;
		data-flex-basis=&#34;436px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_24.png&#34;
	width=&#34;1009&#34;
	height=&#34;555&#34;
	srcset=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_24_hu13b29509a65073ad4fb8d70b9dd32824_286907_480x0_resize_box_3.png 480w, https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_24_hu13b29509a65073ad4fb8d70b9dd32824_286907_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Image 24&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;181&#34;
		data-flex-basis=&#34;436px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_25.png&#34;
	width=&#34;1009&#34;
	height=&#34;555&#34;
	srcset=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_25_huc4341b84819c7b5e9192ed2aa8348723_217381_480x0_resize_box_3.png 480w, https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_25_huc4341b84819c7b5e9192ed2aa8348723_217381_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Image 25&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;181&#34;
		data-flex-basis=&#34;436px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;定点小数&#34;&gt;定点小数&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_26.png&#34;
	width=&#34;1009&#34;
	height=&#34;555&#34;
	srcset=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_26_hu13a207ab4a761649554e5f74d7d0f122_132550_480x0_resize_box_3.png 480w, https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_26_hu13a207ab4a761649554e5f74d7d0f122_132550_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Image 26&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;181&#34;
		data-flex-basis=&#34;436px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;原码表示&#34;&gt;原码表示&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_27.png&#34;
	width=&#34;1009&#34;
	height=&#34;555&#34;
	srcset=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_27_hu05f0725f8c25748a8ac252a09a080463_142973_480x0_resize_box_3.png 480w, https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_27_hu05f0725f8c25748a8ac252a09a080463_142973_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Image 27&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;181&#34;
		data-flex-basis=&#34;436px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;定点小数的原反补码的转换&#34;&gt;定点小数的原/反/补码的转换&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_28.png&#34;
	width=&#34;1009&#34;
	height=&#34;555&#34;
	srcset=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_28_hu02f022f4d223c0367524e34185f16ffe_177674_480x0_resize_box_3.png 480w, https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_28_hu02f022f4d223c0367524e34185f16ffe_177674_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Image 28&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;181&#34;
		data-flex-basis=&#34;436px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;定点小数的加减运算&#34;&gt;定点小数的加/减运算&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;对定点小数做加/减运算时，需要先转换为补码&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;加法：从最低位开始，按位相加（符号位参与运算），并往更高位进位&lt;/li&gt;
&lt;li&gt;减法：被减数不变，减数全部按位取反、末位+1，减法变加法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_29.png&#34;
	width=&#34;1009&#34;
	height=&#34;555&#34;
	srcset=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_29_hue01cf48212e9d21be430576ce988a7b4_323546_480x0_resize_box_3.png 480w, https://chaihaojian.github.io/post/computer_composition_principles/chapter_2/chap2_29_hue01cf48212e9d21be430576ce988a7b4_323546_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Image 29&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;181&#34;
		data-flex-basis=&#34;436px&#34;
	
&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>计算机系统概述</title>
        <link>https://chaihaojian.github.io/post/computer_composition_principles/chapter_1/</link>
        <pubDate>Tue, 27 Feb 2024 10:13:54 +0800</pubDate>
        
        <guid>https://chaihaojian.github.io/post/computer_composition_principles/chapter_1/</guid>
        <description>&lt;img src="https://chaihaojian.github.io/post/computer_composition_principles/chapter_1/cover.JPG" alt="Featured image of post 计算机系统概述" /&gt;&lt;h1 id=&#34;第一章-计算机系统概述&#34;&gt;第一章 计算机系统概述&lt;/h1&gt;
&lt;h2 id=&#34;计算机通过电信号传递数据&#34;&gt;计算机通过电信号传递数据&lt;/h2&gt;
&lt;p&gt;低电平表示二进制0&lt;/p&gt;
&lt;p&gt;高电平表示二进制1&lt;/p&gt;
&lt;h2 id=&#34;计算机系统&#34;&gt;计算机系统&lt;/h2&gt;
&lt;p&gt;包括硬件和软件两大方面。&lt;/p&gt;
&lt;h2 id=&#34;计算机硬件的发展&#34;&gt;计算机硬件的发展&lt;/h2&gt;
&lt;p&gt;第一代：第一台电子数字计算机：ENIAC（1946） 逻辑元件：电子管；&lt;/p&gt;
&lt;p&gt;第二代：晶体管 体积、功耗降低 出现面向过程的程序设计语言：FORTRAN 有了操作系统雏形；&lt;/p&gt;
&lt;p&gt;第三代： 中小规模集成电路 计算机主要用于科学计算等专业用途 高级语言迅速发展 开始有了分时操作系统；&lt;/p&gt;
&lt;p&gt;第四代：大规模、超大规模集成电路 开始出现微处理器、微型计算机 个人计算机（PC）萌芽 ；&lt;/p&gt;
&lt;p&gt;微型计算机的发展以微处理器技术为标志；&lt;/p&gt;
&lt;p&gt;机器字长：计算机一次整数运算所能处理的二进制位数；&lt;/p&gt;
&lt;p&gt;摩尔定律：集成电路上可容纳的晶体管数目，约每隔18个月便会增加一倍，整体性能也将提升一倍；该定律揭示了信息技术进步的速度。&lt;/p&gt;
&lt;h2 id=&#34;计算机软件的发展&#34;&gt;计算机软件的发展&lt;/h2&gt;
&lt;p&gt;机器语言 &amp;ndash;&amp;gt; 汇编语言 &amp;ndash;&amp;gt; 高级语言&lt;/p&gt;
&lt;h2 id=&#34;计算机的发展趋势两极分化&#34;&gt;计算机的发展趋势（两极分化）&lt;/h2&gt;
&lt;p&gt;1.微型计算机向更微型化、网络化、高性能、多用途方向发展；&lt;/p&gt;
&lt;p&gt;2.巨型机向更巨型化、超高速、并行处理、智能化方向发展。&lt;/p&gt;
&lt;h2 id=&#34;计算机硬件的基本组成&#34;&gt;计算机硬件的基本组成&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_1/chap1_3.png&#34;
	width=&#34;1179&#34;
	height=&#34;591&#34;
	srcset=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_1/chap1_3_huc8930e9ed2bf1b92f45845989119399f_273245_480x0_resize_box_3.png 480w, https://chaihaojian.github.io/post/computer_composition_principles/chapter_1/chap1_3_huc8930e9ed2bf1b92f45845989119399f_273245_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Image 4&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;199&#34;
		data-flex-basis=&#34;478px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;早期冯诺依曼机的结构&#34;&gt;早期冯诺依曼机的结构&lt;/h3&gt;
&lt;p&gt;ENIAC：需要手动接线来控制计算，需要人工干预，影响计算速度&lt;/p&gt;
&lt;p&gt;冯诺依曼提出“存储程序”的概念：&lt;/p&gt;
&lt;p&gt;将指令以二进制代码的形式事先输入计算机的主存储器（内存），然后按其在存储器中的首地址执行程序的第一条指令，以后就按该程序规定的顺序执行其他指令，直至程序结束。&lt;/p&gt;
&lt;p&gt;第一台采用冯诺依曼结构的计算机：EDVAC（Electronic Discrete Variable Automatic Computer）。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_1/chap1_.png&#34;
	width=&#34;1171&#34;
	height=&#34;589&#34;
	srcset=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_1/chap1__hu4723fdecbcbcafa1b0eb01b655f62ecd_131073_480x0_resize_box_3.png 480w, https://chaihaojian.github.io/post/computer_composition_principles/chapter_1/chap1__hu4723fdecbcbcafa1b0eb01b655f62ecd_131073_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Image 1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;198&#34;
		data-flex-basis=&#34;477px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;输入设备：将信息转换成机器能识别的形式；&lt;/p&gt;
&lt;p&gt;存储器：存放数据和程序；&lt;/p&gt;
&lt;p&gt;运算器：进行算术运算和逻辑运算；&lt;/p&gt;
&lt;p&gt;控制器：指挥程序运行；&lt;/p&gt;
&lt;p&gt;输出设备：将结果转换成人们熟悉的形式；&lt;/p&gt;
&lt;p&gt;在计算机系统中，软件和硬件在逻辑上是等效的；&lt;/p&gt;
&lt;p&gt;冯诺依曼计算机的特点：&lt;/p&gt;
&lt;p&gt;1.计算机由五大部件组成；&lt;/p&gt;
&lt;p&gt;2.指令和数据以同等地位存于存储器，可按地址寻访；&lt;/p&gt;
&lt;p&gt;3.指令和数据用二进制表示；&lt;/p&gt;
&lt;p&gt;4.指令有操作码和地址码组成；&lt;/p&gt;
&lt;p&gt;5.存储程序；&lt;/p&gt;
&lt;p&gt;6.以运算器为中心：输入/输出设备与存储器之间的数据传送通过运算器完成；&lt;/p&gt;
&lt;h3 id=&#34;现代计算机的结构&#34;&gt;现代计算机的结构&lt;/h3&gt;
&lt;p&gt;以存储器为中心&lt;/p&gt;
&lt;p&gt;CPU = 运算器 + 控制器&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_1/chap1_1.png&#34;
	width=&#34;1150&#34;
	height=&#34;575&#34;
	srcset=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_1/chap1_1_hue4234cf55fd7a88e16da9c255eff0dc8_112777_480x0_resize_box_3.png 480w, https://chaihaojian.github.io/post/computer_composition_principles/chapter_1/chap1_1_hue4234cf55fd7a88e16da9c255eff0dc8_112777_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Image 2&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;200&#34;
		data-flex-basis=&#34;480px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_1/chap1_2.png&#34;
	width=&#34;1291&#34;
	height=&#34;435&#34;
	srcset=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_1/chap1_2_hu4b95543c81dd2d0a15b8724477fef860_180055_480x0_resize_box_3.png 480w, https://chaihaojian.github.io/post/computer_composition_principles/chapter_1/chap1_2_hu4b95543c81dd2d0a15b8724477fef860_180055_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Image 3&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;296&#34;
		data-flex-basis=&#34;712px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;计算机内各个硬件的工作原理&#34;&gt;计算机内各个硬件的工作原理&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_1/chap1_9.png&#34;
	width=&#34;1130&#34;
	height=&#34;574&#34;
	srcset=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_1/chap1_9_huc0bcc9e69500143da4e38f889ed56d87_228884_480x0_resize_box_3.png 480w, https://chaihaojian.github.io/post/computer_composition_principles/chapter_1/chap1_9_huc0bcc9e69500143da4e38f889ed56d87_228884_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Image 10&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;196&#34;
		data-flex-basis=&#34;472px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;主存储器的基本组成&#34;&gt;主存储器的基本组成&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_1/chap1_4.png&#34;
	width=&#34;363&#34;
	height=&#34;500&#34;
	srcset=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_1/chap1_4_huaa0ef70a11fc573ea07ed2abef0dca9a_62733_480x0_resize_box_3.png 480w, https://chaihaojian.github.io/post/computer_composition_principles/chapter_1/chap1_4_huaa0ef70a11fc573ea07ed2abef0dca9a_62733_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Image 5&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;72&#34;
		data-flex-basis=&#34;174px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;存储体：数据在存储体内按地址存储，存储体里有一个一个的存储单元，每个存储单元存放一串二进制代码；每个存储单元对应一个地址；&lt;/p&gt;
&lt;p&gt;存储字：存储单元中二进制代码的组合叫做存储字(word)；&lt;/p&gt;
&lt;p&gt;存储字长：存储单元中能够存放的二进制代码位数叫做存储字长，通常为8bit的整数倍；&lt;/p&gt;
&lt;p&gt;存储元：存储二进制的电子元件，每个存储元可存1bit；&lt;/p&gt;
&lt;p&gt;MAR：指明要访问的数据的地址，MAR位数反映存储单元的个数；&lt;/p&gt;
&lt;p&gt;MDR：存放存储单元中取出的数据/需要保存进存储单元的数据，因此MDR字长=存储字长；&lt;/p&gt;
&lt;p&gt;注：MAR，MDR在逻辑上属于主存的一部分，但现代计算机通常把MAR，MDR集成在CPU内。&lt;/p&gt;
&lt;h3 id=&#34;运算器的基本组成&#34;&gt;运算器的基本组成&lt;/h3&gt;
&lt;p&gt;运算器：用于实现算术运算（如：加减乘除）、逻辑运算（如：与或非）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_1/chap1_5.png&#34;
	width=&#34;310&#34;
	height=&#34;422&#34;
	srcset=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_1/chap1_5_hu1e6026174c91aef84153168c0908e1a0_31892_480x0_resize_box_3.png 480w, https://chaihaojian.github.io/post/computer_composition_principles/chapter_1/chap1_5_hu1e6026174c91aef84153168c0908e1a0_31892_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Image 6&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;73&#34;
		data-flex-basis=&#34;176px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;ACC：累加器，用于存放操作数，或运算结果；&lt;/p&gt;
&lt;p&gt;MQ：乘商寄存器，在乘、除运算时，用于存放操作数或运算结果；&lt;/p&gt;
&lt;p&gt;X：通用的操作数寄存器，用于存放操作数；&lt;/p&gt;
&lt;p&gt;ALU：算术逻辑单元，通过内部复杂的电路实现算术运算、逻辑运算；&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_1/chap1_6.png&#34;
	width=&#34;1188&#34;
	height=&#34;182&#34;
	srcset=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_1/chap1_6_huabac652cc3ca8a78ad514374fded5273_120451_480x0_resize_box_3.png 480w, https://chaihaojian.github.io/post/computer_composition_principles/chapter_1/chap1_6_huabac652cc3ca8a78ad514374fded5273_120451_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Image 7&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;652&#34;
		data-flex-basis=&#34;1566px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;控制器的基本组成&#34;&gt;控制器的基本组成&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_1/chap1_7.png&#34;
	width=&#34;245&#34;
	height=&#34;281&#34;
	srcset=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_1/chap1_7_hu0d9404defbcec03be4b5423b91673a8d_18342_480x0_resize_box_3.png 480w, https://chaihaojian.github.io/post/computer_composition_principles/chapter_1/chap1_7_hu0d9404defbcec03be4b5423b91673a8d_18342_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Image 8&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;87&#34;
		data-flex-basis=&#34;209px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;CU：控制单元，分析指令，给出控制信号；&lt;/p&gt;
&lt;p&gt;IR：指令寄存器，存放当前执行的指令；&lt;/p&gt;
&lt;p&gt;PC：程序计数器，存放下一条指令的地址，有自动加1功能；&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_1/chap1_8.png&#34;
	width=&#34;659&#34;
	height=&#34;232&#34;
	srcset=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_1/chap1_8_huc55bf51739c308ae5cd382689f45b031_108862_480x0_resize_box_3.png 480w, https://chaihaojian.github.io/post/computer_composition_principles/chapter_1/chap1_8_huc55bf51739c308ae5cd382689f45b031_108862_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Image 9&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;284&#34;
		data-flex-basis=&#34;681px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;计算机系统的层次结构&#34;&gt;计算机系统的层次结构&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_1/chap1_12.png&#34;
	width=&#34;1490&#34;
	height=&#34;650&#34;
	srcset=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_1/chap1_12_huf59130488ca3b88789901913bead72d4_255539_480x0_resize_box_3.png 480w, https://chaihaojian.github.io/post/computer_composition_principles/chapter_1/chap1_12_huf59130488ca3b88789901913bead72d4_255539_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Image 13&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;229&#34;
		data-flex-basis=&#34;550px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_1/chap1_10.png&#34;
	width=&#34;1446&#34;
	height=&#34;892&#34;
	srcset=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_1/chap1_10_hu4d5875788f57736c2c51898c9c60dbd9_450792_480x0_resize_box_3.png 480w, https://chaihaojian.github.io/post/computer_composition_principles/chapter_1/chap1_10_hu4d5875788f57736c2c51898c9c60dbd9_450792_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Image 11&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;162&#34;
		data-flex-basis=&#34;389px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_1/chap1_11.png&#34;
	width=&#34;1580&#34;
	height=&#34;894&#34;
	srcset=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_1/chap1_11_hu123a62699ef0bfaec14dd61ea0d40c5b_745713_480x0_resize_box_3.png 480w, https://chaihaojian.github.io/post/computer_composition_principles/chapter_1/chap1_11_hu123a62699ef0bfaec14dd61ea0d40c5b_745713_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Image 12&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;176&#34;
		data-flex-basis=&#34;424px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;计算机的性能指标&#34;&gt;计算机的性能指标&lt;/h2&gt;
&lt;h3 id=&#34;存储器的性能指标&#34;&gt;存储器的性能指标&lt;/h3&gt;
&lt;p&gt;MAR位数反映存储单元的个数（最多支持多少个）；&lt;/p&gt;
&lt;p&gt;MDR位数 = 存储字长 = 每个存储单元的大小；&lt;/p&gt;
&lt;p&gt;总容量 = 存储单元个数 * 存储字长 	bit&lt;/p&gt;
&lt;p&gt;​			 = 存储单元个数 * 存储字长 / 8 	Byte&lt;/p&gt;
&lt;p&gt;1 GB = 1024 MB = 1024 * 1024 KB = 1024 * 1024 * 1024 Byte&lt;/p&gt;
&lt;p&gt;1 Byte = 8 bit&lt;/p&gt;
&lt;h3 id=&#34;cpu的性能指标&#34;&gt;CPU的性能指标&lt;/h3&gt;
&lt;p&gt;CPU时钟周期：每个脉冲信号的时间，单位：微秒、纳秒；&lt;/p&gt;
&lt;p&gt;CPU主频（时钟频率）= 1 / CPU时钟周期：CPU内数字脉冲信号振荡的频率，单位：Hz；&lt;/p&gt;
&lt;p&gt;CPI(Clock cycle Per Instruction)：执行一条指令所需的时钟周期数；不同的指令，CPI不同；相同的指令，CPI也可能有变化；&lt;/p&gt;
&lt;p&gt;执行一条指令的耗时 = CPI * CPU时钟周期；&lt;/p&gt;
&lt;p&gt;CPU执行时间（整个程序的耗时）= CPU时钟周期数 / 主频 = （指令条数 * CPI）/  主频；&lt;/p&gt;
&lt;p&gt;IPS(Instruction Per Second) = 主频 / 平均CPI：每秒执行多少条指令；&lt;/p&gt;
&lt;p&gt;FLOPS(Floating-point Operations Per Seconds)：每秒执行所少次浮点运算；&lt;/p&gt;
&lt;h3 id=&#34;系统整体性能指标&#34;&gt;系统整体性能指标&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_1/chap1_13.png&#34;
	width=&#34;1353&#34;
	height=&#34;745&#34;
	srcset=&#34;https://chaihaojian.github.io/post/computer_composition_principles/chapter_1/chap1_13_hud6643a20c7d3df87c347d79aa97d6c8f_342685_480x0_resize_box_3.png 480w, https://chaihaojian.github.io/post/computer_composition_principles/chapter_1/chap1_13_hud6643a20c7d3df87c347d79aa97d6c8f_342685_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Image 14&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;181&#34;
		data-flex-basis=&#34;435px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;数据通路带宽：数据总线一次所能并行传送信息的位数（各硬件部件通过数据总线传输数据）；&lt;/p&gt;
&lt;p&gt;吞吐量：系统在单位时间内处理请求的数量；&lt;/p&gt;
&lt;p&gt;响应时间：从用户向计算机发送一个请求，到系统对该请求作出响应并获得它所需要的结果的等待时间；&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
